# -*- coding: utf-8 -*-
"""Candle.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1cABpTkS4xfhseWIqja8E8z9cOFz89sA0
"""

pip install websocket-client

import websocket, json
from datetime import datetime

cc = 'btcusd'
interval = '1m'


socket = f'wss://stream.binance.com:9443/ws/{cc}t@kline_{interval}'

def on_message(ws, message):
    print(message)

def on_close(ws, close_status_code, close_msg):
    print("Connection closed")

ws = websocket.WebSocketApp(socket,on_message=on_message,on_close=on_close)

ws.run_forever()

dates, closes, highs, lows = [], [], [], []

#candle

def on_message(ws, message):
    json_message = json.loads(message)
    candle = json_message['k']
    is_candle_closed = candle['x']
    time = candle['T']
    close = candle['c']
    high = candle['h']
    low = candle['l']
    vol = candle['v']

    if is_candle_closed:
      date = datetime.fromtimestamp(float(time)//1000.0).date().isoformat()
      dates.append(date)
      closes.append(float(close))
      highs.append(float(high))
      lows.append(float(low))
    
      print(dates)
      print(closes)
      print(highs)
      print(lows)
    
def on_close(ws, close_status_code, close_msg):
    print("Connection closed")

ws = websocket.WebSocketApp(socket, on_message = on_message, on_close = on_close)

ws.run_forever()